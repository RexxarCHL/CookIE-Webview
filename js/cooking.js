// Generated by CoffeeScript 1.7.1

/* Class Definitions */
var Step, cookingStarted, loadStep;

Step = (function() {
  function Step(startTime, duration, percentage, recipeName, digest) {
    this.startTime = startTime;
    this.duration = duration;
    this.percentage = percentage;
    this.recipeName = recipeName;
    this.digest = digest;
    this.endTime = this.startTime + this.duration;
    void 0;
  }

  Step.calculatePercentage = function(currentTime) {
    return Math.ceil((this.endTime - currentTime) / this.duration * 100);
  };

  return Step;

})();


/* Function definitions */

cookingStarted = function() {
  var cookingData, currentStep, finishPercentage;
  if (window.cookingData == null) {
    return void 0;
  }
  cookingData = window.cookingData;
  currentStep = window.currentStep;
  finishPercentage = Math.ceil((currentStep + 1) / window.cookingData.steps.length * 100);
  window.currentTime = 0;
  console.log("cooking started");
  $("#Step").attr("data-title", "Step " + (currentStep + 1) + " (" + finishPercentage + "%)");
  loadStep(currentStep);
  return void 0;
};

loadStep = function(currentStep) {
  var finishPercentage, nextStep, scope, thisStep;
  if (currentStep >= window.cookingData.steps.length) {
    console.log("finished");
    $.ui.loadContent("Finish");
    return void 0;
  }
  console.log("load step#" + currentStep);
  window.currentStep = currentStep;
  thisStep = window.cookingData.steps[currentStep];
  finishPercentage = Math.ceil((currentStep + 1) / window.cookingData.steps.length * 100);
  scope = $("#Step");
  $.ui.setTitle("Step " + (currentStep + 1) + " (" + finishPercentage + "%)");
  scope.find(".this_step_recipe_name").html(thisStep.recipeName);
  if (thisStep.imageURL != null) {
    console.log("img:" + thisStep.imageURL);
    scope.find(".this_step_img").attr("src", thisStep.imageURL);
    scope.find(".this_step_img_wrapper").show();
  } else {
    console.log("no img");
    scope.find(".this_step_img_wrapper").hide();
  }
  scope.find(".this_step_digest").html(thisStep.digest);
  nextStep = window.cookingData.steps[currentStep + 1];
  if (nextStep != null) {
    scope.find(".next_step_name").html(nextStep.stepName);
    scope.find(".next_step_time").html(nextStep.time);
  } else {
    scope.find(".next_step_name").html("Final Step Reached");
    scope.find(".next_step_time").html("00:00");
    scope.find(".step_next_btn").html("Finish ");
  }
  scope.find(".step_next_btn").unbind('click');
  return scope.find(".step_next_btn").click(function() {
    return loadStep(currentStep + 1);
  });
};
